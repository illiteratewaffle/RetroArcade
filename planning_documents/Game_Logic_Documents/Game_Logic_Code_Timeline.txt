Game Logic Coding Timeline

Each milestone is “due” Wednesdays at 9 pm to adhere to the group buffer convention, since official deadlines are on Fridays. Team scrums are also typically held on those evenings.

March 7 ~ Iteration 1 is due
March 12 : File structure in the repository has been set up following a meeting with GUI and Networking to finalize the plan. Each game (Tic-Tac-Toe, Checkers, Connect 4) has its own set of classes, with functions stubbed out based on initial design discussions. Minimal code completed, focused on defining class relationships and method signatures. Communication with the GUI team to ensure method interfaces align with their expectations. Basic unit tests are written alongside method stubs to verify that core classes compile and interact as expected.

March 19 : First round of coding completed. Each game has a functioning game loop that supports player turns and win conditions in local play. Early internal reviews begin, with team members encouraged to rotate between games to promote cross-team familiarity. Developers should write unit tests for core game logic (e.g., valid moves, win conditions) alongside their code, with at least basic coverage for critical functions.

March 21 ~ Iteration 2 is due. No code submission required. Communication with the Networking team has taken place to begin coordinating accounts, player interactions, and multiplayer structure.

*After Iteration 2 – Feedback from external review will be incorporated into the codebase as it becomes available. Priority will be given to changes that affect class structure or method signatures, while smaller improvements may be deferred to later testing stages. Any feedback requiring significant rework will be discussed as a team to assess impact on the timeline.

	March 28 : Stubs for multiplayer functionality are in place, with placeholder methods for connecting players and passing moves between systems. Game state validation has been implemented, including win conditions, invalid moves, and turn enforcement. A first round of test cases is written and committed to the repository, covering both standard gameplay and common edge cases.

	April 4: All game logic is complete. Code reviews ensure consistency across the three games. Every function has Javadoc comments, and style requirements have been met. Test cases have been expanded to cover all major functionality, including invalid inputs, game resets, and boundary cases. Developers remain available to resolve bugs during integration with GUI and Networking teams.

	April 9 : Final round of testing and debugging. Integration testing is underway with both GUI and Networking teams. All games should run without crashing and pass all previously written test cases.

April 11 ~ Iteration 3 is due. All files are submitted on D2L.
